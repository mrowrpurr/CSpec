function(expect actual)
    set(not_assertion false)
    list(POP_FRONT ARGN arg)
    string(TOLOWER "${arg}" arg_lower)
    if(arg_lower STREQUAL "not")
        set(not_assertion true)
        list(POP_FRONT ARGN arg)
        string(TOLOWER "${arg}" arg_lower)
    endif()
    if(arg_lower STREQUAL "to")
        list(POP_FRONT ARGN arg)
        string(TOLOWER "${arg}" arg_lower)
    else()
        message(FATAL_ERROR "Unexpected argument provided to expect() '${arg}'")
    endif()
    set(assertion "${arg_lower}")
    if(arg_lower STREQUAL "be")
        list(POP_FRONT ARGN arg)
        string(TOLOWER "${arg}" arg_lower)
        string(APPEND assertion "_${arg_lower}")
    endif()
    cmake_language(CALL "__cspec_assert_${assertion}" "${not_assertion}" "${actual}" ${ARGN})
endfunction()

macro(expect_fail message)
    if("${CMAKE_CURRENT_FUNCTION}" MATCHES ^__cspec_assert_)
        string(SUBSTRING "${CMAKE_CURRENT_FUNCTION}" 15 -1 assertion_name)
        message(FATAL_ERROR "${assertion_name} failed: ${message}")
    else()
        message(FATAL_ERROR "${message}")
    endif()
endmacro()
